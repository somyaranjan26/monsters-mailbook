{"version":3,"sources":["components/card.component.jsx","components/card-list.component.jsx","components/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","src","monster","id","alt","name","email","CardList","monsters","map","i","SearchBox","placeholder","handleChange","type","class","onChange","App","e","setState","searchField","target","value","state","fetch","then","response","json","api","this","filterdMonsters","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8MAEaA,EAAO,SAAAC,GAAK,OACrB,sBAAKC,UAAU,8LAAf,UACI,qBAAKA,UAAU,gBAAgBC,IAAG,+BAA0BF,EAAMG,QAAQC,GAAxC,aAAuDC,IAAI,YAC7F,qBAAKJ,UAAU,OAAf,SAAuBD,EAAMG,QAAQG,OACrC,qBAAKL,UAAU,OAAf,SAAuBD,EAAMG,QAAQI,YCFhCC,EAAW,SAAAR,GACxB,OACI,qBAAKC,UAAU,uCAAf,SACKD,EAAMS,SAASC,KAAI,SAAAC,GAAC,OACjB,qBAAKV,UAAU,eAAf,SACE,cAAC,EAAD,CAAiBE,QAASQ,GAAfA,EAAEP,YCPdQ,EAAY,SAAC,GAAD,IAAGC,EAAH,EAAGA,YAAaC,EAAhB,EAAgBA,aAAhB,OACrB,uBACIC,KAAK,SACLF,YAAcA,EACdG,MAAM,iQACNC,SAAUH,KC4CHI,E,kDA3Cb,aAAe,IAAD,8BACZ,gBAcFJ,aAAe,SAAAK,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,SAbtC,EAAKC,MAAQ,CACXf,SAAU,GACVY,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAG,OAAI,EAAKT,SAAS,CAAEX,SAAUoB,S,oBAOzC,WAEE,MAAkCC,KAAKN,MAA/Bf,EAAR,EAAQA,SAAUY,EAAlB,EAAkBA,YAIZU,EAAkBtB,EAASuB,QAAO,SAAA7B,GAAO,OAC7CA,EAAQG,KAAK2B,cAAcC,SAASb,EAAYY,kBAGjD,OACC,yBAASjB,MAAM,yEAAf,SACE,sBAAKf,UAAY,2CAAjB,UACE,oBAAIA,UAAU,wBAAd,+BACA,cAAC,EAAD,CACEY,YAAY,kBACZC,aAAcgB,KAAKhB,eAErB,cAAC,EAAD,CAAUL,SAAUsB,a,GAvCZI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d5284630.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Card = props => (\n    <div className=\"border-2 text-center bg-gradient-to-b from-pink-900 to-gray-900  border-gray-200 border-opacity-60 rounded-lg overflow-hidden transition duration-300 ease-in-out transform hover:scale-110\">\n        <img className=\"mx-auto w-2/5\" src={`https://robohash.org/${props.monster.id}?set=set2`} alt=\"monster\" />\n        <div className=\"pt-6\">{props.monster.name}</div>\n        <div className=\"pb-6\">{props.monster.email}</div>\n    </div>\n)","import React from 'react'\n\nimport { Card } from './card.component';\n\nexport const CardList = props => {\nreturn (\n    <div className=\"flex flex-col md:flex-row flex-wrap \">\n        {props.monsters.map(i => (\n            <div className=\"p-4 md:w-1/3\">\n              <Card key={i.id} monster={i} />\n            </div>\n          ))}\n    </div>\n    )\n}","import React from 'react';\n\nexport const SearchBox = ({ placeholder, handleChange }) => ( \n    <input                                                    // getting placeholder as an argument \n        type=\"search\"                                         // so it can be reusable\n        placeholder={ placeholder } \n        class=\"w-1/2 my-10 bg-gray-800  rounded focus:ring-2 focus:ring-indigo-200 focus:bg-transparent border border-gray-300 focus:border-gray-900 text-base outline-none text-gray-100 placeholder-gray-400 py-1 px-3 leading-8 transition-colors duration-200 ease-in-out\"\n        onChange={handleChange}\n    />\n)\n","import { Component } from 'react';\n\nimport { CardList } from './components/card-list.component'\nimport { SearchBox } from './components/search-box.component'\n\n// function App() {\nclass App extends Component { // class based app\n \n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {  // called automatically, when component rendered/mounted on webpage.\n    fetch('https://jsonplaceholder.typicode.com/users')\n    .then(response => response.json())\n    .then(api => this.setState({ monsters: api }));\n  }\n\n  handleChange = e => {                            // arrow function refers to super class\n    this.setState({ searchField: e.target.value }) // setState from Component class bind to this\n  }\n\n  render() { // class based app\n    \n    const { monsters, searchField } = this.state;\n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n\n    const filterdMonsters = monsters.filter(monster => \n      monster.name.toLowerCase().includes(searchField.toLowerCase())\n    )\n    \n     return ( \n      <section class=\"h-full bg-gradient-to-b from-gray-800 to-gray-900 text-white body-font\">\n        <div className = \"container px-5 py-24 mx-auto text-center\" >\n          <h1 className=\"font-header text-7xl \">Monsters MailBook</h1>\n          <SearchBox \n            placeholder='Search Monsters'\n            handleChange={this.handleChange}\n          />\n          <CardList monsters={filterdMonsters} />\n        </div>\n      </section>\n    );\n  }\n}\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nimport \"tailwindcss/tailwind.css\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}